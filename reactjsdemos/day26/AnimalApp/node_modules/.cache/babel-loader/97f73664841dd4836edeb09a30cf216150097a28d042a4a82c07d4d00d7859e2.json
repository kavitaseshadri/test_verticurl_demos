{"ast":null,"code":"var _jsxFileName = \"/Users/kavitaseshadri/Downloads/freelance_mock_demos/VerticurlDemos/reactjsdemos/day26/AnimalApp/src/AnimalApp3.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimalApp3 = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const handleClick = event => {\n    // setCount(count + 1);//here I get the latest value of count\n    // setCount(count + 1);//here I don't\n    // setCount(count + 1);//here I don't\n    //if you pass an arrow function to the set method, React will pass the latest value\n    //of that state variable to the arrow function as an argument\n    //you should use this technique, if the change you want to make depends on the previous \n    ///change done to the state variable\n    setCount(current => ++current);\n    // setCount((current) => ++current);\n    // setCount((current) => ++current);\n    console.log('button was clicked');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AnimalApp3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Add Animal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Number of animals created: \", count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(AnimalApp3, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = AnimalApp3;\nexport default AnimalApp3;\nvar _c;\n$RefreshReg$(_c, \"AnimalApp3\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AnimalApp3","_s","count","setCount","handleClick","event","current","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/kavitaseshadri/Downloads/freelance_mock_demos/VerticurlDemos/reactjsdemos/day26/AnimalApp/src/AnimalApp3.js"],"sourcesContent":["import React, { useState } from 'react'\n\nconst AnimalApp3 = () => {\n    const [count, setCount] = useState(0);\n    const handleClick = (event) => {\n        // setCount(count + 1);//here I get the latest value of count\n        // setCount(count + 1);//here I don't\n        // setCount(count + 1);//here I don't\n        //if you pass an arrow function to the set method, React will pass the latest value\n        //of that state variable to the arrow function as an argument\n        //you should use this technique, if the change you want to make depends on the previous \n        ///change done to the state variable\n        setCount((current) => ++current);\n        // setCount((current) => ++current);\n        // setCount((current) => ++current);\n        console.log('button was clicked');\n    }\n\n    return (\n        <div>\n            <h1>AnimalApp3</h1>\n            <button onClick={handleClick}>Add Animal</button>\n            <div><h2>Number of animals created: {count}</h2></div>\n        </div>\n    )\n}\n\nexport default AnimalApp3"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMO,WAAW,GAAIC,KAAK,IAAK;IAC3B;IACA;IACA;IACA;IACA;IACA;IACA;IACAF,QAAQ,CAAEG,OAAO,IAAK,EAAEA,OAAO,CAAC;IAChC;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACrC,CAAC;EAED,oBACIT,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAAU,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBd,OAAA;MAAQe,OAAO,EAAEV,WAAY;MAAAK,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjDd,OAAA;MAAAU,QAAA,eAAKV,OAAA;QAAAU,QAAA,GAAI,6BAA2B,EAACP,KAAK;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEd,CAAC;AAAAZ,EAAA,CAvBKD,UAAU;AAAAe,EAAA,GAAVf,UAAU;AAyBhB,eAAeA,UAAU;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}